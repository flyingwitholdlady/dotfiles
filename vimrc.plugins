
"source $VIMRUNTIME/ftplugin/man.vim

" ---------------------------------------------------
Plug 'majutsushi/tagbar'

nnoremap <leader>t :TagbarToggle<CR>
let g:tagbar_ctags_bin='/usr/bin/ctags'
let g:tagbar_autofocus=1

" ---------------------------------------------------
Plug 'altercation/vim-colors-solarized'
Plug 'tomasr/molokai'
Plug 'dracula/vim'


" ---------------------------------------------------
" nerdtree
Plug 'scrooloose/nerdtree'

nmap <leader>f :NERDTreeToggle<CR>
let NERDTreeWinSize=32
let NERDTreeWinPos="left"
let NERDTreeShowHidden=1
let NERDTreeMinimalUI=1
let NERDTreeDirArrows=0
let g:NERDTreeMapOpenSplit='s'
let g:NERDTreeMapOpenVSplit='v'
let NERDTreeAutoDeleteBuffer=1


" ---------------------------------------------------
" minibufexpl
Plug 'fholgado/minibufexpl.vim'

nnoremap [b :MBEbp <CR>
nnoremap ]b :MBEbn <CR>

" ---------------------------------------------------
" ctrlp: invoke by <ctrl-p>
Plug 'ctrlpvim/ctrlp.vim'

let g:ctrlp_working_path_mode = ''
let g:ctrlp_match_window = 'bottom,order:ttb,min:1,max=100'
let g:ctrlp_max_files=0
let g:ctrlp_follow_symlinks = 2
let g:ctrlp_cache_dir = $HOME . '/.cache/ctrlp'
if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor
  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif


" LargeFile
" ---------------------------------------------------
Plug 'vim-scripts/LargeFile'

let g:LargeFile= 5 " files >= 5MB will use LargeFile rules

" ---------------------------------------------------
"Plug 'vim-scripts/AutoComplPop'


" ---------------------------------------------------
Plug 'Yggdroot/indentLine'


" ---------------------------------------------------
Plug 'justinmk/vim-sneak'
map f <Plug>Sneak_f
map F <Plug>Sneak_F
map t <Plug>Sneak_t
map T <Plug>Sneak_T


" ---------------------------------------------------
Plug 'ervandew/supertab'
Plug 'honza/vim-snippets'
Plug 'SirVer/ultisnips'

let g:UltiSnipsExpandTrigger = '<tab>'
let g:UltiSnipsJumpForwardTrigger = '<tab>'
let g:UltiSnipsJumpBackwardTrigger='<s-tab>'
let g:UltiSnipsEditSplit="vertical"
let g:UltiSnipsUsePythonVersion = 3

" ---------------------------------------------------
Plug 'tpope/vim-fugitive'


" ---------------------------------------------------
Plug 'bling/vim-airline'


"" ---------------------------------------------------
"Plug 'Valloric/YouCompleteMe'
"let g:ycm_confirm_extra_conf = 0
"nmap <leader>gd :YcmDiags<CR>
"nnoremap <leader>gg :YcmCompleter GoToDefinitionElseDeclaration<CR>
"nnoremap <leader>gl :YcmCompleter GoToDeclaration<CR>
"nnoremap <leader>gf :YcmCompleter GoToDefinition<CR>
"let g:ycm_global_ycm_extra_conf = '~/.ycm_extra_conf.py'
"nnoremap <leader>gg :YcmCompleter GoToDefinitionElseDeclaration<CR>
"nnoremap <leader>gl :YcmCompleter GoToDeclaration<CR>
"nnoremap <leader>gf :YcmCompleter GoToDefinition<CR>
"nnoremap <leader>ga  :execute 'vimgrep ' .expand('<cword>') .expand('**/*.*')<CR>

" ---------------------------------------------------
Plug 'aceofall/gtags.vim'

set cscopetag
set cscopeprg=gtags-cscope

function! s:get_visual_selection()
  let [lnum1, col1] = getpos("'<")[1:2]
  let [lnum2, col2] = getpos("'>")[1:2]
  let lines = getline(lnum1, lnum2)
  let lines[-1] = lines[-1][: col2 - (&selection == 'inclusive' ? 1 : 2)]
  let lines[0] = lines[0][col1 - 1:]
  return join(lines, "\n")
endfunction
nnoremap <leader>gg :execute 'Gtags -d '.expand('<cword>')<CR>
nnoremap <leader>ga  :execute 'Gtags -g ' . expand('<cword>')<CR>
nnoremap <leader>gs :execute '!gtags -v'<CR>

" ---------------------------------------------------
Plug 'rking/ag.vim'
Plug 'terryma/vim-multiple-cursors'

" ---------------------------------------------------
Plug 'MattesGroeger/vim-bookmarks'
highlight BookmarkSign ctermbg=NONE ctermfg=160
highlight BookmarkLine ctermbg=194 ctermfg=NONE
let g:bookmark_sign = 'v'
let g:bookmark_highlight_lines = 1
nmap mm <Plug>BookmarkToggle
nmap ma <Plug>BookmarkShowAll
nmap mn <Plug>BookmarkNext
nmap mp <Plug>BookmarkPrev
nmap mc <Plug>BookmarkClearAll


" ---------------------------------------------------
Plug 'maralla/completor.vim'
let g:completor_python_binary = 'python3'


" ---------------------------------------------------
Plug 'w0rp/ale'

" ---------------------------------------------------
Plug 'plytophogy/vim-virtualenv'
